[{"/Users/joycetoussaint/project_netquest/netquest/src/index.js":"1","/Users/joycetoussaint/project_netquest/netquest/src/reportWebVitals.js":"2","/Users/joycetoussaint/project_netquest/netquest/src/App.js":"3","/Users/joycetoussaint/project_netquest/netquest/src/components/menubar.jsx":"4"},{"size":500,"mtime":1611857768762,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610555030330,"results":"7","hashOfConfig":"6"},{"size":11901,"mtime":1611924998731,"results":"8","hashOfConfig":"6"},{"size":485,"mtime":1610562266013,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1n89cvs",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/joycetoussaint/project_netquest/netquest/src/index.js",[],["22","23"],"/Users/joycetoussaint/project_netquest/netquest/src/reportWebVitals.js",[],["24","25"],"/Users/joycetoussaint/project_netquest/netquest/src/App.js",["26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"import React, { Component, useState, setState, useEffect }  from 'react'\nimport ReactDOM from 'react-dom'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './App.css';\n// import {Nav, Navbar, NavDropdown, MenuItem,  Tabs, ButtonToolbar, Button, Table, ButtonGroup, Row, Col, Grid, Panel, FormGroup, FormControl} from 'react-bootstrap';\n// import logo from './image/logo.jpg'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n    useHistory,\n    Link\n} from 'react-router-dom';\n\n// const [stationData, setStationData] = useState({\n//     'stn' : '',\n//     'date' : '',\n//     'time' : '',\n//     'temp' : '',\n//     'dewp' : '',\n//     'stp' : '',\n//     'slp' : '',\n//     'visib' : '',\n//     'wdsp' : '',\n//     'prcp' : '',\n//     'sndp' : '',\n//     'frshtt' : '',\n//     // 'cldc' : '',\n//     'wnddir' : ''\n// })\n\nconst updatedStationData = {}\n\n// const stationData= {\n//     'stn' : '',\n//     'date' : '',\n//     'time' : '',\n//     'temp' : '',\n//     'dewp' : '',\n//     'stp' : '',\n//     'slp' : '',\n//     'visib' : '',\n//     'wdsp' : '',\n//     'prcp' : '',\n//     'sndp' : '',\n//     'frshtt' : '',\n//     // 'cldc' : '',\n//     'wnddir' : ''\n// }\n// console.log(logo)\n\nconst state = {\n    dicStationData: {\n    }\n}\n\nconst dicStationData = {};\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(\n        // initial value\n        document.cookie.split(';').some((item) => item.trim().startsWith('logedIn=')));\n\n        //cldc is leeg\n\n        // ,date, time, temp, dewp, stp, slp, visib, wdsp, prcp, sndp, frshtt, wnddir\n\n    const sendData = (data) => {\n\n    }\n\n    useEffect (() => {\n        fetch(\"http://localhost:9000/weatherData\")\n            .then(res => res.text())\n            .then((data) => {\n                let newData = JSON.parse(data)\n                for(let key in newData) {\n                    dicStationData[key] = newData[key]\n                }\n                {Object.keys(dicStationData).map((key, i) => (\n                    console.log(key, dicStationData[key]))\n                )}\n\n                for(let key in dicStationData){\n                    localStorage.setItem(key,dicStationData[key]);\n                }\n                for(let key in dicStationData) {\n                    console.log(localStorage.getItem(key))\n                }\n\n                // let newData = JSON.parse(data)\n                // for(let key in newData) {\n                //     dicStationData[key] = newData[key]\n                // }\n                // {Object.keys(dicStationData).map((key, i) => (\n                //     console.log(key, dicStationData[key]))\n                //\n                // )}\n                // let newData = JSON.parse(data)\n                // for(let key in newData) {\n                //     dicStationData[key] = newData[key]\n                // }\n                // {Object.keys(dicStationData).map((key, i) => (\n                //         console.log(key, dicStationData[key]))\n                //\n                // )}\n                // console.log(dicStationData)\n                //     setState({\n                //         dicStationData: newData[key]\n                //     })\n                // }\n                setInterval(() => {\n                    // let newData = JSON.parse(data)\n                    // for(let key in newData) {\n                        // console.log('dit is de key: ' + key)\n                        // console.log('dit zijn de values: ' + newData[key][0])\n                        // setState({\n                        //     dicStationData: newData[key]\n                            // dicStationData.push({\n                            //     dicStationData[key] = newData[key]\n                            // })\n                        // });\n                    // }\n                    //     console.log(state.state.dicStationData)\n                //    only fetch when page is being refreshed?\n                }, 0);\n            })\n            .catch(err => console.log(err));\n    })\n\n    return (\n      <div className=\"App\">\n          <div>\n          </div>\n          <Router>\n          <Switch>\n              <Route path='/login' component={Login} />\n              {/*render={() => <Weather newData={newData} />}*/}\n              <Route path='/weather' component={Weather} />\n              <Route path='/' component={Login} />\n              <Route path='' component={Login} />\n              {/*door private route mag je helemaal niet meer naar weather rip*/}\n              {/*<PrivateRoute path='/weather' component={Weather} />*/}\n          </Switch>\n          {/*<Footer />*/}\n          </Router>\n      </div>\n);\n}\n\nfunction Station (){\n    const stn = '';\n    const date = '';\n    const time = '';\n    const temp = '';\n    const dewp = '';\n    const stp = '';\n    const slp = '';\n    const visib = '';\n    const wdsp = '';\n    const prcp = '';\n    const sndp = '';\n    const frshtt = '';\n    // const cldc = '';\n    const wnddir = '';\n\n}\n\nfunction PrivateRoute ({component: Component, authed, ...rest}) {\n    return (\n        <Route\n            {...rest}\n            render={(props) => authed === true\n                ? <Component {...props} />\n                : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        />\n    )\n}\n\nfunction Navbar(props) {\n    return (\n        <div>\n        <header>\n            hallo\n        </header>\n        </div>\n            // ...\n            // {/*{props.loggedIn ? ... // instead of this.state.loggedIn*/}\n                )\n            }\n\n// You can think of these components as \"pages\"\n// in your app.\nfunction Home() {\n    return (\n        <div>\n            <h2>Home</h2>\n        </div>\n    );\n}\n\nfunction Weather() {\n    const history = useHistory();\n    // const stationInfo = data\n    // console.log(props.stn)\n    const stn = ''\n    const data = ''\n\n    const handleData = (d) => {\n        console.log(d)\n    //     console.log(stationData)\n    //     for(let item in stationData){\n            // stn = item\n            // return <h1>{item}</h1>\n        // }\n        // return <h1>stationData</h1>\n    }\n\n    const handleLogout = () => {\n        console.log(\"logged off\")\n        history.push(\"/login\")\n    }\n    return (\n        <div>\n                <h2>Weather data application</h2>\n                <button onClick={handleLogout}>Logout</button>\n                <button>Download data</button>\n\n                <div className=\"content\">\n                <div className=\"weatherbox\">\n                    <PerfectScrollbar>\n                <h1>All stations</h1>\n                {/*ook moet er ff een slider voor als het meer worden*/}\n\n                {Object.keys(dicStationData).map((key, i) => (\n                    // console.log(key, dicStationData[key]))\n                    <div className=\"longItem\" key={i}>\n                        <p>{key} : </p>\n                        <p>windspeed: {localStorage.getItem(key).split(',')[5]}</p>\n                        <p>winddirection: {localStorage.getItem(key).split(',')[6]}</p>\n                    </div>\n                ))}\n                    </PerfectScrollbar>\n                </div>\n                <div className=\"topten\">\n                    <PerfectScrollbar>\n                <h1>Top ten</h1>\n                <p>station level pressure</p>\n                        {Object.keys(dicStationData).map((key, i) => (\n                            //voor elke key luchtdruk sort\n                            // const sortedList = []\n                            // const airpressure= localStorage.getItem(key).split('')[3]\n                            <div className=\"item\" key={i}>\n                                {localStorage.getItem(key).split(',')[5]}\n                            </div>\n                        ))}\n                {/*<div className=\"item\">*/}\n                {/*test : test*/}\n                {/*</div>*/}\n                        </PerfectScrollbar>\n                </div>\n\n                <div className=\"topten\">\n                    <PerfectScrollbar>\n                <h1>Top ten</h1>\n                <p>sea level pressure</p>\n                        {/*{Object.keys(dicStationData).sort().map((key, i) => (*/}\n                        {/*    <div className=\"item\" key={i}>*/}\n                        {/*        /!*console.log(i)*!/*/}\n                        {/*        {localStorage.getItem(key).split(',')[6]}*/}\n                        {/*    </div>*/}\n                        {/*))}*/}\n\n                        {/*{ let sortable = []*/}\n                        {/*    for(let s in dicStationData) {*/}\n                        {/*        sortable.push([s, dicStationData[s]])*/}\n                        {/*}*/}\n                        {/*}*/}\n\n                        {/*Object.fromEntries(*/}\n                        {/*Object.entries(maxSpeed).sort(([,a],[,b]) => a-b)*/}\n                {/*<div className=\"item\">*/}\n                {/*test : test*/}\n                {/*</div>*/}\n                {/*<div className=\"item\">*/}\n                {/*test : test*/}\n                {/*</div>*/}\n                {/*<div className=\"item\">*/}\n                {/*test : test*/}\n                {/*</div>*/}\n                {/*<div className=\"item\">*/}\n                {/*test : test*/}\n                {/*</div>*/}\n                {/*<div className=\"item\">*/}\n                {/*test : test*/}\n                {/*</div>*/}\n                {/*<div className=\"item\">*/}\n                {/*test : test*/}\n                {/*</div>*/}\n                        </PerfectScrollbar>\n                </div>\n                </div>\n        </div>\n    );\n}\n\nfunction Login() {\n    const [userName, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(\"\")\n    const history = useHistory();\n    const state = {\n        redirect: false\n    }\n\n    const setRedirect = () => {\n        setState({\n            redirect: true\n        })\n    }\n\n    const renderRedirect = () => {\n        if (state.redirect) {\n            return <Redirect to='/Weather' />\n        }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if(userName == 'admin' && password == 'test123'){\n            console.log('je bent ingelogd')\n            history.push(\"/Weather\")\n        //    je moet niet naar /inlog kunnen als ingelogd bent en je moet niet\n        //    naar weather kunnen als je niet bent ingelogd\n\n        } else if(userName == '' || password == '') {\n            // setError('Fields are required')\n            alert('Fields are required')\n        } else {\n            alert('Account info: ' + userName + ' ' + password);\n        }\n\n        // event.checkPassword();\n        // checkUsername\n    }\n\n    {/*<form onSubmit={handleSubmit}>*/}\n    // <input type=\"text\" name=\"name\" className=\"question\" id=\"nme\" required autoComplete=\"off\"/>\n    // <label htmlFor=\"nme\"><span>Username</span></label>\n    // <input type=\"text\" name=\"name\" className=\"question\" id=\"nme\" required autoComplete=\"off\"/>\n    // <label htmlFor=\"nme\"><span>Password</span></label>\n    {/*<input type=\"submit\" value=\"Submit!\"/>*/}\n    {/*</form>*/}\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            {/*<h1>Current username: {userName}</h1>*/}\n            {/*<h1>Current password: {password}</h1>*/}\n            <h1>Login</h1>\n\n                <input type=\"text\" placeholder=\"Username\" value={userName} onChange={e => setUsername(e.target.value)}/>\n                {/*<label>Username</label>*/}\n\n                <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\n                {/*<label>Password</label>*/}\n\n            <button type=\"submit\">Login</button>\n            {/*<input type=\"submit\" value=\"Login\" />*/}\n         </form>\n  );\n}\n\n\nexport default App;\n","/Users/joycetoussaint/project_netquest/netquest/src/components/menubar.jsx",[],["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"79","line":14,"column":5,"nodeType":"76","messageId":"77","endLine":14,"endColumn":9},{"ruleId":"74","severity":1,"message":"80","line":34,"column":7,"nodeType":"76","messageId":"77","endLine":34,"endColumn":25},{"ruleId":"74","severity":1,"message":"81","line":54,"column":7,"nodeType":"76","messageId":"77","endLine":54,"endColumn":12},{"ruleId":"74","severity":1,"message":"82","line":62,"column":12,"nodeType":"76","messageId":"77","endLine":62,"endColumn":20},{"ruleId":"74","severity":1,"message":"83","line":62,"column":22,"nodeType":"76","messageId":"77","endLine":62,"endColumn":33},{"ruleId":"74","severity":1,"message":"84","line":70,"column":11,"nodeType":"76","messageId":"77","endLine":70,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":82,"column":17,"nodeType":"87","messageId":"88","endLine":84,"endColumn":19},{"ruleId":"74","severity":1,"message":"89","line":153,"column":10,"nodeType":"76","messageId":"77","endLine":153,"endColumn":17},{"ruleId":"74","severity":1,"message":"90","line":154,"column":11,"nodeType":"76","messageId":"77","endLine":154,"endColumn":14},{"ruleId":"74","severity":1,"message":"91","line":155,"column":11,"nodeType":"76","messageId":"77","endLine":155,"endColumn":15},{"ruleId":"74","severity":1,"message":"92","line":156,"column":11,"nodeType":"76","messageId":"77","endLine":156,"endColumn":15},{"ruleId":"74","severity":1,"message":"93","line":157,"column":11,"nodeType":"76","messageId":"77","endLine":157,"endColumn":15},{"ruleId":"74","severity":1,"message":"94","line":158,"column":11,"nodeType":"76","messageId":"77","endLine":158,"endColumn":15},{"ruleId":"74","severity":1,"message":"95","line":159,"column":11,"nodeType":"76","messageId":"77","endLine":159,"endColumn":14},{"ruleId":"74","severity":1,"message":"96","line":160,"column":11,"nodeType":"76","messageId":"77","endLine":160,"endColumn":14},{"ruleId":"74","severity":1,"message":"97","line":161,"column":11,"nodeType":"76","messageId":"77","endLine":161,"endColumn":16},{"ruleId":"74","severity":1,"message":"98","line":162,"column":11,"nodeType":"76","messageId":"77","endLine":162,"endColumn":15},{"ruleId":"74","severity":1,"message":"99","line":163,"column":11,"nodeType":"76","messageId":"77","endLine":163,"endColumn":15},{"ruleId":"74","severity":1,"message":"100","line":164,"column":11,"nodeType":"76","messageId":"77","endLine":164,"endColumn":15},{"ruleId":"74","severity":1,"message":"101","line":165,"column":11,"nodeType":"76","messageId":"77","endLine":165,"endColumn":17},{"ruleId":"74","severity":1,"message":"102","line":167,"column":11,"nodeType":"76","messageId":"77","endLine":167,"endColumn":17},{"ruleId":"74","severity":1,"message":"103","line":171,"column":10,"nodeType":"76","messageId":"77","endLine":171,"endColumn":22},{"ruleId":"74","severity":1,"message":"104","line":182,"column":10,"nodeType":"76","messageId":"77","endLine":182,"endColumn":16},{"ruleId":"74","severity":1,"message":"105","line":196,"column":10,"nodeType":"76","messageId":"77","endLine":196,"endColumn":14},{"ruleId":"74","severity":1,"message":"90","line":208,"column":11,"nodeType":"76","messageId":"77","endLine":208,"endColumn":14},{"ruleId":"74","severity":1,"message":"106","line":209,"column":11,"nodeType":"76","messageId":"77","endLine":209,"endColumn":15},{"ruleId":"74","severity":1,"message":"107","line":211,"column":11,"nodeType":"76","messageId":"77","endLine":211,"endColumn":21},{"ruleId":"74","severity":1,"message":"108","line":312,"column":12,"nodeType":"76","messageId":"77","endLine":312,"endColumn":17},{"ruleId":"74","severity":1,"message":"109","line":312,"column":19,"nodeType":"76","messageId":"77","endLine":312,"endColumn":27},{"ruleId":"74","severity":1,"message":"110","line":318,"column":11,"nodeType":"76","messageId":"77","endLine":318,"endColumn":22},{"ruleId":"74","severity":1,"message":"111","line":324,"column":11,"nodeType":"76","messageId":"77","endLine":324,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":332,"column":21,"nodeType":"114","messageId":"115","endLine":332,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":332,"column":44,"nodeType":"114","messageId":"115","endLine":332,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":338,"column":28,"nodeType":"114","messageId":"115","endLine":338,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":338,"column":46,"nodeType":"114","messageId":"115","endLine":338,"endColumn":48},{"ruleId":"85","severity":1,"message":"86","line":349,"column":5,"nodeType":"87","messageId":"88","endLine":349,"endColumn":41},{"ruleId":"85","severity":1,"message":"86","line":354,"column":5,"nodeType":"87","messageId":"88","endLine":354,"endColumn":49},{"ruleId":"85","severity":1,"message":"86","line":355,"column":5,"nodeType":"87","messageId":"88","endLine":355,"endColumn":18},{"ruleId":"68","replacedBy":"116"},{"ruleId":"70","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],["118"],["119"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Link' is defined but never used.","'updatedStationData' is assigned a value but never used.","'state' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'sendData' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Station' is defined but never used.","'stn' is assigned a value but never used.","'date' is assigned a value but never used.","'time' is assigned a value but never used.","'temp' is assigned a value but never used.","'dewp' is assigned a value but never used.","'stp' is assigned a value but never used.","'slp' is assigned a value but never used.","'visib' is assigned a value but never used.","'wdsp' is assigned a value but never used.","'prcp' is assigned a value but never used.","'sndp' is assigned a value but never used.","'frshtt' is assigned a value but never used.","'wnddir' is assigned a value but never used.","'PrivateRoute' is defined but never used.","'Navbar' is defined but never used.","'Home' is defined but never used.","'data' is assigned a value but never used.","'handleData' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'renderRedirect' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["118"],["119"],"no-global-assign","no-unsafe-negation"]